/// <reference types="webaudioapi" />
/**
 * The basic audio node class.
 * This is de skeleton for a audio  effect.
 * When the effect only contains 1 audioNode this class can be used.
 */
export declare class SingleAudioNode {
    private _audioContext;
    private _node;
    nodes: {
        [key: string]: AudioNode | GainNode | DelayNode | WaveShaperNode | BiquadFilterNode | OscillatorNode | ConvolverNode;
    };
    constructor(audioContext: AudioContext);
    /**
     * The effects AudioContext getter.
     * @return {AudioContext} The AudioContext used by the effect.
     */
    /**
     * The effects AudioContext setter.
     * @param  {AudioContext} audioContext
     */
    audioContext: AudioContext;
    /**
     * The effect's audio-node getter.
     * @return {AudioNode} The audio-node used for the effect.
     */
    /**
     * The effect's audio-node setter.
     * @param  {AudioNode} node
     * @return {AudioNode}
     */
    node: AudioNode | GainNode;
    /**
     * Connect the effect to other effects or native audio-nodes.
     * @param  {AudioNode|SingleAudioNode} node
     * @return {AudioNode|SingleAudioNode}
     */
    connect(node: AudioNode | SingleAudioNode): AudioNode | SingleAudioNode;
    /**
     * disconnect the effect.
     * @return {AudioNode}
     */
    disconnect(): AudioNode;
    /**
     * Alias for the disconnect method, to offer the same api as a MultiAudioNode.
     * @return {AudioNode}
     */
    destroy(): AudioNode;
}
