/// <reference types="webaudioapi" />
/// <reference types="es6-promise" />
import { SingleAudioNode } from '../SingleAudioNode';
import { MultiAudioNode } from '../MultiAudioNode';
/**
 * The audio-effects input node.
 * This class lets you set an input audio source or access the  uses' microphone.
 */
export declare class Input extends SingleAudioNode {
    private _deferredConnects;
    private _hasPermissions;
    constructor(audioContext: AudioContext);
    /**
     * Getter for the effects input node.
     * @return {AudioNode}
     */
    /**
     * Setter for the effects input node.
     * @param  {AudioStream} stream
     */
    input: AudioNode | MediaStream;
    /**
     * Get your microphone sound as input.
     * @return {Promise<AudioNode>} Resolves when you accept to use the microphone.
     */
    getUserMedia(): Promise<any>;
    /**
     * Connect the effect to other effects or native audio-nodes.
     * @param  {AudioNode|SingleAudioNode|MultiAudioNode} node
     * @return {AudioNode|SingleAudioNode|MultiAudioNode}
     */
    connect(node: AudioNode | SingleAudioNode | MultiAudioNode): AudioNode | SingleAudioNode | MultiAudioNode;
    /**
     * Get a list of audio in-and-output devices devices.
     * @return {Promise<Array<any>>} A list of the available audio in-and-output devices.
     */
    getAudioDevices(): Promise<Array<any>>;
}
