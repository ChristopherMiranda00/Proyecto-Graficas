/// <reference types="webaudioapi" />
import { SingleAudioNode } from './SingleAudioNode';
/**
 * The multi-audio-node class.
 * When creating an effect existing out of multiple audio-nodes, we can wrap it in this class.
 * You can set the input node (effect.node) and the output node of the effect (effect.output).
 * The input node is the first audio-node in the effect, the previous effect will be connected to this node.
 * The output node is the last audio-node in the effect, the next effect will be connected to this node.
 */
export declare class MultiAudioNode extends SingleAudioNode {
    private _outputNode;
    constructor(audioContext: AudioContext);
    /**
     * Getter for the effects output node.
     * @return {AudioNode}
     */
    /**
     * Setter for the effects output node.
     * @param  {AudioNode} output
     * @return {AudioNode}
     */
    output: AudioNode;
    /**
     * Connect the effect to other effects or native audio-nodes.
     * @param  {AudioNode|SingleAudioNode|MultiAudioNode} node
     * @return {AudioNode|SingleAudioNode|MultiAudioNode}
     */
    connect(node: AudioNode | SingleAudioNode | MultiAudioNode): AudioNode | SingleAudioNode | MultiAudioNode;
    /**
     * Disconnect the effect.
     * @return {AudioNode}
     */
    disconnect(): AudioNode;
    /**
     * Destroy an effect.
     * @return {AudioNode}
     */
    destroy(): AudioNode;
}
